// <auto-generated />
using System;
using KutuphaneOtomasyonSistemi.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KutuphaneOtomasyonSistemi.Migrations
{
    [DbContext(typeof(KitapContext))]
    [Migration("20250419153552_AddErisimTuruColumnToIzinler")]
    partial class AddErisimTuruColumnToIzinler
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.İzin", b =>
                {
                    b.Property<int>("IzinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IzinID"), 1L, 1);

                    b.Property<string>("Durum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ErisimTuru")
                        .HasColumnType("int");

                    b.Property<DateTime>("GüncellenmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OluşturmaZamanı")
                        .HasColumnType("datetime2");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("SayfaAdı")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IzinID");

                    b.HasIndex("RolID");

                    b.ToTable("İzinler");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"), 1L, 1);

                    b.Property<string>("Durum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GüncellenmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OluşturmaZamanı")
                        .HasColumnType("datetime2");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Kitap", b =>
                {
                    b.Property<int>("KitapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KitapID"), 1L, 1);

                    b.Property<string>("Başlık")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Durum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GüncellenmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OluşturmaZamanı")
                        .HasColumnType("datetime2");

                    b.Property<int>("SayfaSayısı")
                        .HasColumnType("int");

                    b.Property<int>("YayınYılı")
                        .HasColumnType("int");

                    b.Property<string>("Yayıncı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yazar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KitapID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Kullanıcı", b =>
                {
                    b.Property<int>("KullanıcıID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullanıcıID"), 1L, 1);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Durum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GüncellenmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullanıcıAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OluşturmaZamanı")
                        .HasColumnType("datetime2");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarası")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Şifre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullanıcıID");

                    b.HasIndex("RolId");

                    b.ToTable("Kullanıcılar");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Ödünç", b =>
                {
                    b.Property<int>("KitapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KitapID"), 1L, 1);

                    b.Property<int>("ÜyeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("İadeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KitapID");

                    b.HasIndex("ÜyeID");

                    b.ToTable("Ödünçler");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Rezervasyon", b =>
                {
                    b.Property<int>("RezervasyonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervasyonID"), 1L, 1);

                    b.Property<string>("Durum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GeçerlilikSüresi")
                        .HasColumnType("int");

                    b.Property<DateTime>("GüncellenmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<int>("KitapID")
                        .HasColumnType("int");

                    b.Property<int>("KullanıcıID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OluşturmaZamanı")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RezervasyonTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("RezervasyonID");

                    b.HasIndex("KitapID");

                    b.HasIndex("KullanıcıID");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"), 1L, 1);

                    b.Property<string>("Durum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GüncellenmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OluşturmaZamanı")
                        .HasColumnType("datetime2");

                    b.Property<string>("RolAdı")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Üye", b =>
                {
                    b.Property<int>("ÜyeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ÜyeID"), 1L, 1);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Durum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GüncellenmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OluşturmaZamanı")
                        .HasColumnType("datetime2");

                    b.Property<int>("TCKimlikNo")
                        .HasColumnType("int");

                    b.Property<int>("TelefonNo")
                        .HasColumnType("int");

                    b.HasKey("ÜyeID");

                    b.ToTable("Üyeler");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.İzin", b =>
                {
                    b.HasOne("KutuphaneOtomasyonSistemi.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Kitap", b =>
                {
                    b.HasOne("KutuphaneOtomasyonSistemi.Models.Kategori", "Kategori")
                        .WithMany("Kitaplar")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Kullanıcı", b =>
                {
                    b.HasOne("KutuphaneOtomasyonSistemi.Models.Rol", "Rol")
                        .WithMany("Kullanıcılar")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Ödünç", b =>
                {
                    b.HasOne("KutuphaneOtomasyonSistemi.Models.Üye", "Üye")
                        .WithMany()
                        .HasForeignKey("ÜyeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Üye");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Rezervasyon", b =>
                {
                    b.HasOne("KutuphaneOtomasyonSistemi.Models.Kitap", "Kitap")
                        .WithMany()
                        .HasForeignKey("KitapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneOtomasyonSistemi.Models.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Kategori", b =>
                {
                    b.Navigation("Kitaplar");
                });

            modelBuilder.Entity("KutuphaneOtomasyonSistemi.Models.Rol", b =>
                {
                    b.Navigation("Kullanıcılar");
                });
#pragma warning restore 612, 618
        }
    }
}
